name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.24.4'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub upgrade
          
       # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
#       添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"
      # 打印 Xcode 版本信息
      - name: Print Xcode Version
        run: |
          xcodebuild -version
          echo "Xcode Path: $(xcode-select -p)"
          swift --version
          
      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 123456
          
          provisioning-profile-base64: 


          keychain-password: 111111

      # # 添加检查步骤
      # - name: 检查构建文件
      #   run: |
      #     echo "检查 build/ios/ipa 目录内容："
      #     ls -la build/ios/ipa/
      #     echo "检查 build/ios 目录内容："
      #     ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa
          
#      - name: Check IPA Path
#        run: |
#          echo "=================== IPA Location Check ==================="
#          echo "Checking build/ios directory:"
#          ls -R build/ios/
#          
#          echo "\nChecking for IPA files in build directory:"
#          find build -name "*.ipa" -type f
#          
#          echo "\nChecking specific paths:"
#          for path in \
#            "build/ios/ipa" \
#            "build/ios/archive/Runner.xcarchive/Products/Applications" \
#            "build/ios/Release-iphoneos"
#          do
#            echo "\nChecking $path:"
#            if [ -d "$path" ]; then
#              ls -la "$path"
#            else
#              echo "Directory does not exist: $path"
#            fi
#          done

   
      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/aichatgenie.ipa"
          APPLE_ID: "liululu@wzchaoming.shop"
          APP_SPECIFIC_PASSWORD: "jctn-tyfi-tmad-bmwz"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
